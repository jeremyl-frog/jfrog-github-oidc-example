name: "JFrog-GitHub NPM Publish OIDC Integration"
on: push

permissions:
  id-token: write

jobs:
  build:
    runs-on: self-hosted
    env:
      OIDC_AUDIENCE: 'jfrog-github'
      OIDC_PROVIDER: 'jeremyl-github'
      PLATFORM_REPO: 'eks-npm'
      JF_URL: ${{ secrets.CLOUD_JF_URL }}
    defaults:
      run:
        working-directory: ./package
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node npm
        uses: actions/setup-node@v3

      - name: Get and inspect GitHub OIDC token
        run: |
          # Fetch GitHub OIDC token
          ID_TOKEN=$(curl -sLS -H "User-Agent: actions/oidc-client" \
            -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
            "${ACTIONS_ID_TOKEN_REQUEST_URL}&audience=$OIDC_AUDIENCE" | jq -r .value)
          echo "ID_TOKEN=$ID_TOKEN" >> $GITHUB_ENV
          # Decode JWT payload to inspect claims
          PAYLOAD=$(echo "$ID_TOKEN" \
            | cut -d '.' -f2 \
            | tr '_-' '/+' \
            | awk '{ l=length($0)%4; if (l>0) print $0 substr("====",1,4-l); else print $0; }' \
            | base64 -D \
            | jq .)
          echo "Decoded OIDC claims:"
          echo "$PAYLOAD"
        env:
          OIDC_AUDIENCE: ${{ env.OIDC_AUDIENCE }}


      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4.5.6
        with:
          oidc-provider-name: ${{ env.OIDC_PROVIDER }}
          oidc-audience: ${{ env.OIDC_AUDIENCE }}
        env:
          JF_URL: ${{ env.JF_URL }}

      - name: Set CLI Config
        run: jf npm-config --repo-resolve=$PLATFORM_REPO --repo-deploy=$PLATFORM_REPO --server-id-resolve setup-jfrog-cli-server --server-id-deploy setup-jfrog-cli-server 

      - name: Show RT Servers and Set default
        run: jf c use setup-jfrog-cli-server

      - name: Show CLI servers
        run: jf c s

      - name: Install Dependencies
        run: jf npm install

      - name: Publish
        run: jf npm publish

      - name: Publish Build info With JFrog CLI
        run: |
          jf rt build-collect-env
          jf rt build-add-git
          jf rt build-publish
